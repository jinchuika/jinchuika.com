<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jinchuika</title>
    <link>https://jinchuika.com/es/</link>
    <description>Recent content on Jinchuika</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Luis Carlos Contreras</copyright>
    <lastBuildDate>Sun, 08 Sep 2019 19:11:07 -0600</lastBuildDate><atom:link href="https://jinchuika.com/es/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cómo crear un Bot de instagram con Python</title>
      <link>https://jinchuika.com/es/post/10-instagram-bot/</link>
      <pubDate>Sun, 08 Sep 2019 19:11:07 -0600</pubDate>
      
      <guid>https://jinchuika.com/es/post/10-instagram-bot/</guid>
      <description>¿Te ha pasado que páginas o personas que no conoces de la nada dan like a tus publicaciones o te siguen en Instagram? Por lo general esas páginas son bots, programados para realizar estas acciones.En este post aprenderemos cómo crear un bot de Instagram para ganar más seguidores utilizando Python. Al final del post puedes encontrar la explicación en video (puedes ir directamente desde aquí) sobre cómo hacer el procedimiento (aunque si solo quieres copiar y pegar, seguramente es más fácil).</description>
    </item>
    
    <item>
      <title>Programación orientada a objetos: Herencia de clases</title>
      <link>https://jinchuika.com/es/post/9-oop-tutorial-1/</link>
      <pubDate>Thu, 05 Sep 2019 14:17:14 -0600</pubDate>
      
      <guid>https://jinchuika.com/es/post/9-oop-tutorial-1/</guid>
      <description>Hice un video tutorial donde explico cómo funciona la herencia de clases en programación orientada a objetos.
Primera parte Segunda parte Código fuente A continuación puedes encontrar el código utilizado en este video:
class Vehiculo: nombre = &amp;#39;&amp;#39; llantas = 0 motor = 0 encendido = &amp;#34;Apagado&amp;#34; def __init__(self, nombre, llantas, motor): self.nombre = nombre self.llantas = llantas self.motor = motor def encender(self): self.encendido = &amp;#34;Encendido&amp;#34; def apagar(self): self.encendido = &amp;#34;Apagado&amp;#34; class Auto(Vehiculo): puertas = 0 puertas_abiertas = False def __init__(self, nombre, llantas, motor, puertas): self.</description>
    </item>
    
    <item>
      <title>Cómo procesar los datos de las elecciones generales utilizando Python</title>
      <link>https://jinchuika.com/es/post/7-elecciones-gt-2019-parte2/</link>
      <pubDate>Tue, 25 Jun 2019 19:27:40 -0600</pubDate>
      
      <guid>https://jinchuika.com/es/post/7-elecciones-gt-2019-parte2/</guid>
      <description>Resumen por si no quieres leer todo y únicamente quieres los resultados:
 Link al repositorio con mi código: Repo en GitHub. Los resultados de las elecciones presidenciables: Descargar datos de candidatos a presidente. Todos los archivos en CSV de las elecciones de diputados por listado nacional: Descargar los datos de diputados por listado nacional. Todos los archivos en CSV de las elecciones de diputados por distrito: Descargar los datos de diputados por distrito.</description>
    </item>
    
    <item>
      <title>Cómo descargué todos los datos de las elecciones de mi país usando Python (y cómo puedes hacerlo tú)</title>
      <link>https://jinchuika.com/es/post/6-elecciones-gt-2019-parte1/</link>
      <pubDate>Sat, 22 Jun 2019 23:59:16 -0600</pubDate>
      
      <guid>https://jinchuika.com/es/post/6-elecciones-gt-2019-parte1/</guid>
      <description>Resumen por si no quieres leer todo y únicamente quieres ver cómo lo hice:
 Link al repositorio con mi código, donde adjunto una guía de instalación si tú quieres hacer lo mismo: Repo en GitHub. Un archivo JSON con todos los datos, por si tú quieres realizar tu propio análisis: Descargar. Un archivo en CSV con los resultados de las elecciones presidenciables en cada una de las 21099 mesas electorales: Descargar.</description>
    </item>
    
    <item>
      <title>Por qué usar Python para desarrollar inteligencia artificial</title>
      <link>https://jinchuika.com/es/post/5-por-que-python/</link>
      <pubDate>Fri, 19 Apr 2019 22:40:23 -0600</pubDate>
      
      <guid>https://jinchuika.com/es/post/5-por-que-python/</guid>
      <description>Esta pregunta nunca falta en todas las confererncias o clases sobre introducción a la inteligencia artificial. Dado que muchas personas que empiezan en esta área tienen experiencia en otros lenguajes, consideré importante saber por qué vale la pena darle una oportunidad a Python.
Es muy fácil de aprender y utilizar Cuando hablamos de ciencia de datos, es muy importante comprender los conceptos matemáticos y estadísticos que fundamentan los algoritmos. Recorrer estos temas nos llevará mayor o menor tiempo dependiendo de nuestra experiencia previa con ellos.</description>
    </item>
    
    <item>
      <title>Politica de Privacidad</title>
      <link>https://jinchuika.com/es/politica-privacidad/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jinchuika.com/es/politica-privacidad/</guid>
      <description>Fecha efectiva: 03 de abril de 2019
Jinchuika (&amp;ldquo;nosotros&amp;rdquo;, &amp;ldquo;a nosotros&amp;rdquo;, &amp;ldquo;nuestro&amp;rdquo;) opera el sitio web https://jinchuika.com/ (en adelante, el &amp;ldquo;Servicio&amp;rdquo;).
Esta página le informa de nuestras políticas en materia de recopilación, uso y divulgación de datos personales cuando utiliza nuestro Servicio y de las opciones de las que dispone en relación con esos datos. Our Privacy Policy for Jinchuika is created with the help of the Free Privacy Policy Generator.</description>
    </item>
    
    <item>
      <title>Inclusión de templates en Django</title>
      <link>https://jinchuika.com/es/post/3-inclusion-templates-django/</link>
      <pubDate>Wed, 27 Mar 2019 22:54:02 -0600</pubDate>
      
      <guid>https://jinchuika.com/es/post/3-inclusion-templates-django/</guid>
      <description>Este post fue migrado de mi antiguo blog. El código fue modificado para ajustarse a versiones más recientes de Django.
 Hace unos días empecé a sentir que el código en uno de los componentes principales de mi sistema se estaba saliendo de control. Tengo un modelo al que hacen referencia muchos otros, así que hice una página donde se pudiera ver toda la información relacionada a él. De pronto caí en cuenta de que el template estaba creciendo muchísimo más allá de lo que me habría gustado.</description>
    </item>
    
    <item>
      <title>Geoff Hinton, Yann LeCun y Yoshua Bengio ganan el premio &#39;Alan Turing&#39;</title>
      <link>https://jinchuika.com/es/post/2-turing/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jinchuika.com/es/post/2-turing/</guid>
      <description>Yann LeCun, Geoff Hinton y Yoshua Bengio acaban de ganar el premio &amp;lsquo;Alan Turing&amp;rsquo;, también conocido como el premio Nobel de la computación. Lo más sorprendente es que ninguno de ellos la ganara antes, pues los avances obtenidos por todos son increíbles. Para tener una idea de lo badass que son estos sujetos, veamos un poco de su historia.
Geoff Hinton El profesor universitario en la NYU, actualmente de 71 años, fue pionero en el desarrollo de las redes neuronales.</description>
    </item>
    
    <item>
      <title>Estructuras de datos simples en Python (Parte 0)</title>
      <link>https://jinchuika.com/es/post/estructuras_python_1/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jinchuika.com/es/post/estructuras_python_1/</guid>
      <description>En esta serie de posts introduciremos conceptos básicos para almacenar y manipular datos utilizando Python y distintas librerías. El enfoque principal es poder llegar a manipular datos para crear un algoritmo inteligente.
 Los datos a utilizar en inteligencia artificial se representan en matrices. En el siguiente ejemplo, tenemos una matriz de 4x3: 4 filas por 3 columnas.
   Encabezado1 Encabezado2 Encabezado3     Dato1-1 Dato1-2 Dato1-3   Dato2-1 Dato2-2 Dato2-3   Dato3-1 Dato3-2 Dato3-3   Dato4-1 Dato4-2 Dato4-3    En este caso, la matriz es una estructura de 2 dimensiones, pues tiene filas y columnas.</description>
    </item>
    
    <item>
      <title>¡Hola mundo!</title>
      <link>https://jinchuika.com/es/post/hello_world/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jinchuika.com/es/post/hello_world/</guid>
      <description>¡Hola! Este es mi (más reciente intento de crear un) blog. Estaré publicando cosas sobre programación, tecnología, inteligencia artificial y matemática próximamente.</description>
    </item>
    
    <item>
      <title>Acerca de</title>
      <link>https://jinchuika.com/es/about/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jinchuika.com/es/about/</guid>
      <description>¡Hola! Mi nombre es Luis Carlos Contreras (usualmente Chuik) y soy un ingeniero de software. Creé este blog para compartir algunas de mis experiencias en programación.
He estado desarrolando software desde el 2013. A lo largo de los años, he aprendido muchos lenguajes de programación y tecnologías como:
 Python (para back-end web, scraping, ingeniería de datos y machine learning) Linux (para administrar servidores y para ser dueño de mi PC) Swift y Java (para desarrollo móvil eventualmente) JavaScript (para no disfrutar la vida) Data Science (porque decir estadística está pasado de moda) AWS (porque si no estás en la nube no existes) Terraform / Docker / DevOps (porque ya no puedo poner la excusa de que solo funciona en local)  Algunos links sobre mí:</description>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>https://jinchuika.com/es/showcase/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jinchuika.com/es/showcase/</guid>
      <description>Header 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. Donec quis dolor nec nunc mollis interdum vel in purus. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.</description>
    </item>
    
  </channel>
</rss>
